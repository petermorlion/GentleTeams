<?php

/**
* @file
* A custom module for Gentle Ultimate Frisbee and organizing users in teams.
*/

/**
* Implements hook_help.
*
* Displays help and module information.
*
* @param path
*   Which path of the site we're using to display help
* @param arg
*   Array that holds the current path as returned from arg() function
*/
function gentle_teams_help($path, $arg) {
  switch ($path) {
    case "admin/help#gentle_teams":
      return '<p>' . t("A custom module for Gentle Ultimate Frisbee and organizing users in teams.") . '</p>';
      break;
  }
}

/**
* Implementation of hook_menu
*/
function gentle_teams_menu() {
    $items['admin/gentle_teams'] = array(
        'title' => 'Teams',
        'description' => 'Managing Gentle teams.',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('gentle_teams_season_overview_form'),
        'access arguments' => array('manage gentle_teams'),
        'type' => MENU_NORMAL_ITEM,
    );
    
    $items['admin/gentle_teams/seasons'] = array(
        'title' => 'Seasons',
        'description' => 'Overview of the Gentle seasons.',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('gentle_teams_season_overview_form'),
        'access arguments' => array('manage gentle_teams'),
        'type' => MENU_DEFAULT_LOCAL_TASK,
        'weight' => 0
    );

    $items['admin/gentle_teams/seasons/add'] = array(
        'title' => 'Add season',
        'description' => 'Page to add a season.',
        'page callback' => 'gentle_teams_season_get_form',
        'page arguments' => array(3),
        'access arguments' => array('manage gentle_teams')
    );

    $items['admin/gentle_teams/seasons/edit/%'] = array(
        'title' => 'Edit season',
        'description' => 'Page to edit a season.',
        'page callback' => 'gentle_teams_season_get_form',
        'page arguments' => array(3, 4),
        'access arguments' => array('manage gentle_teams')
    );

    return $items;
}

/**
 * Valid permissions for this module
 * @return array An array of valid permissions for the gentle_teams module
 */
function gentle_teams_perm() {
    return array('manage gentle_teams');
}

/**
 * Implementation of hook_permission. Provides the permissions so they can be selected on the Permissions page.
 */
function gentle_teams_permission() {
    return array(
        'manage gentle_teams' => array(
            'title' => t('Manage Gentle teams.'),
            'description' => t('Allow a user to manage the Gentle Teams.')
        ),
    );
}

/**
 * Returns the form for the seasons overview.
 */
function gentle_teams_season_overview_form() {
    global $base_url;

    $form = array();
    $form['#prefix'] = "<p><a href='" . $base_url . "/admin/gentle_teams/seasons/add'>" . t("Add season") . "</a></p>";

    $header = array(
        array(
            'data' => 'Begin',
            'field' => 'begin',
            'sort' => 'asc'
        ),
        array(
            'data' => 'End',
            'field' => 'end'
        ),
        array(
            'data' => 'Players',
            'field' => 'count'
        )
    );

    $rows = array();

    $rs = db_query('SELECT s.id, s.begin, s.end, count(s.id) as count
                    FROM {gentle_teams_season} s
                        LEFT OUTER JOIN {gentle_teams_season_users} su ON su.sid = s.id
                        LEFT OUTER JOIN {users} u ON u.uid = su.uid
                    GROUP BY s.id, s.begin, s.end');

    foreach($rs as $row) {
        $season_link = '<a href="' . $base_url . '/admin/gentle_teams/seasons/edit/' . $row->id . '">' . $row->begin . "</a>";
        $rows[$row->id] = array(
            $season_link, 
            $row->end,
            $row->count
        );
    }

    
    $form['gentle_teams_season_overview'] = array(
        '#type' => 'tableselect',
        '#header' => $header,
        '#options' => $rows,
        '#empty' => t('There are no seasons defined yet.'),
        '#multiple' => TRUE,
    );

    $form['submit_button'] = array(
        '#type' => 'submit',
        '#value' => t('Delete selected'),
    );

    return $form;
}

/**
 * Submits the form for the seasons overview.
 */
function gentle_teams_season_overview_form_submit($form, &$form_state) {
    foreach($form_state['values']['gentle_teams_season_overview'] as $rid) {
        db_delete('gentle_teams_season_users')
            ->condition('sid', $rid)
            ->execute();
        db_delete('gentle_teams_season')
            ->condition('id', $rid)
            ->execute();
    }

    drupal_set_message(t('The selected seasons have been deleted.'));  
}

/**
 * Returns the form for adding/editing a season
 */
function gentle_teams_season_get_form($mode, $sid = NULL) {
    return drupal_get_form('gentle_teams_season_form', $mode, $sid);
}

/**
 * The form for adding/editing a season
 */
function gentle_teams_season_form($form, $form_state, $mode, $sid = NULL) {
    $form = array();

    $default_begin = intval(date('Y'));
    $default_end = intval(date('Y')) + 1;
    $season_id = NULL;

    $years = array();
    for ($i = 2010; $i <= 2050; $i++) {
        $years[$i] = $i;
    }

    if ($sid != NULL) {
        $rs = db_query('SELECT id, begin, end 
                        FROM {gentle_teams_season} 
                        WHERE id = :sid', array(':sid' => $sid));
        foreach($rs as $season) {
            $default_begin = $season->begin;
            $default_end = $season->end;
            $season_id = $season->id;            
        }

        if ($season_id == NULL) {
            drupal_set_message(t('The season with id ' . $sid . 'could not be found.'), 'error');
        }
    }

    $form['gentle_teams_season_id'] = array(
        '#type' => 'hidden',
        '#default_value' => $season_id,
    );

    $form['gentle_teams_season_begin'] = array(
        '#type' => 'select',
        '#title' => t('Begin'),
        '#description' => t('The year when the season starts.'),
        '#default_value' => $default_begin,
        '#options' => $years,
    );

    $form['gentle_teams_season_end'] = array(
        '#type' => 'select',
        '#title' => t('End'),
        '#description' => t('The year when the season ends.'),
        '#default_value' => $default_end,
        '#options' => $years,
    );

    $header = array(
        array(
            'data' => 'User',
            'field' => 'name',
            'sort' => 'asc'
        )
    );

    $rs = db_query('select u.uid, u.name, su.sid
                    from {users} u
                        left outer join {gentle_teams_season_users} su on su.uid = u.uid and su.sid = :sid
                    where u.status = 1', array('sid' => $season_id));

    $rows = array();
    $default_values = array();

    foreach ($rs as $rs_item) {
	    $row = $rs_item;
        
        $rows[$row->uid] = array(
            $row->name
        );
        
        if ($row->sid != NULL) {
            $default_values[$row->uid] = TRUE;
        }
    }

    $form['gentle_teams_season_users'] = array(
        '#type' => 'tableselect',
        '#header' => $header,
        '#options' => $rows,
        '#empty' => t('Couldn\'t find any users.'),
        '#multiple' => TRUE,
        '#default_value' => $default_values,
    );

    $form['submit_button'] = array(
        '#type' => 'submit',
        '#value' => t('Submit'),
    );

    return $form;
}

/**
 * Validating the form to add a season.
 */
function gentle_teams_season_form_validate($form, &$form_state) {
    // TODO: check if season already exists
    $begin = intval($form_state['values']['gentle_teams_season_begin']);
    $end = intval($form_state['values']['gentle_teams_season_end']);
    if ($begin > $end) {
        form_set_error('gentle_teams_season_begin', t('The begin year must be smaller than or equal to the end year.'));
    }
}

/**
 * Submitting the form to add/edit a season.
 */
function gentle_teams_season_form_submit($form, &$form_state) {
    $sid = intval($form_state['values']['gentle_teams_season_id']);
    $begin = intval($form_state['values']['gentle_teams_season_begin']);
    $end = intval($form_state['values']['gentle_teams_season_end']);

    if ($sid == NULL) {
        $sid = db_insert('gentle_teams_season')
        ->fields(array(
            'begin' => $begin,
            'end' => $end,
        ))
        ->execute();

        drupal_set_message(t('The season was added.'));
    } else {
        db_update('gentle_teams_season')
        ->fields(array(
            'begin' => $begin,
            'end' => $end,
        ))
        ->condition('id', $sid, '=')
        ->execute();

        drupal_set_message(t('The season was updated.'));
    }

    db_delete('gentle_teams_season_users')
            ->condition('sid', $sid)
            ->execute();

    foreach($form_state['values']['gentle_teams_season_users'] as $uid) {
        if($uid != 0) {
            db_insert('gentle_teams_season_users')
                ->fields(array(
                    'uid' => $uid,
                    'sid' => $sid,
                ))
                ->execute();
        }
    }

    $form_state['redirect'] = 'admin/gentle_teams/seasons/edit/' . $sid;
}